apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        
        //versionCode globalConfiguration.getAt("versionCode")
        //versionName globalConfiguration.getAt("versionName")
        //testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        //applicationId globalConfiguration.getAt("androidApplicationId")
    }
    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            defaultPublishConfig "release"
            buildConfigField "boolean", "LOGABLE", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            debuggable true
            defaultPublishConfig "debug"
            buildConfigField "boolean", "LOGABLE", "true"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
	
	lintOptions {
        abortOnError false
        disable("InvalidPackage",
                "InflateParams",
                "UnusedResources",
                "UselessParent",
                "IconLocation",
                "RtlHardcoded")
    }
    buildToolsVersion '25.0.2'
}

dependencies {

    compile project(':data')
    compile project(':comdependence')


    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies

    compile presentationDependencies.appcompat
    //butterknife
    compile presentationDependencies.butterKnife
    //dagger2
    compile presentationDependencies.dagger
    apt presentationDependencies.daggerCompiler
    //provided presentationDependencies.javaxAnnotation

    compile presentationDependencies.supportAnnotation
    compile presentationDependencies.otto
    compile presentationDependencies.rxJava

    //JUNIT TEST DEPENDENCE
    testCompile presentationTestDependencies.junit
    testCompile presentationTestDependencies.mockito
    testCompile presentationTestDependencies.robolectric

    androidTestCompile presentationTestDependencies.mockito
    androidTestCompile presentationTestDependencies.espresso
    androidTestCompile presentationTestDependencies.testRunner
    androidTestCompile presentationTestDependencies.testRule
}
